local use_test_env
use_test_env = require("lapis.spec").use_test_env
local truncate_tables
truncate_tables = require("lapis.spec.db").truncate_tables
local Users
Users = require("models").Users
local TopicParticipants
TopicParticipants = require("community.models").TopicParticipants
local factory = require("spec.factory")
return describe("models.topic_participants", function()
  use_test_env()
  before_each(function()
    return truncate_tables(TopicParticipants)
  end)
  it("should participate a user", function()
    TopicParticipants:increment(-1, 1)
    local ps = TopicParticipants:select()
    assert.same(1, #ps)
    local p = unpack(ps)
    assert.same(-1, p.topic_id)
    assert.same(1, p.user_id)
    return assert.same(1, p.posts_count)
  end)
  it("should increment participant", function()
    TopicParticipants:increment(-1, 1)
    TopicParticipants:increment(-1, 1)
    local ps = TopicParticipants:select()
    assert.same(1, #ps)
    local p = unpack(ps)
    assert.same(-1, p.topic_id)
    assert.same(1, p.user_id)
    return assert.same(2, p.posts_count)
  end)
  it("should decrement participant", function()
    TopicParticipants:increment(-1, 1)
    TopicParticipants:increment(-1, 1)
    TopicParticipants:decrement(-1, 1)
    local ps = TopicParticipants:select()
    assert.same(1, #ps)
    local p = unpack(ps)
    assert.same(-1, p.topic_id)
    assert.same(1, p.user_id)
    return assert.same(1, p.posts_count)
  end)
  it("should decrement and delete participant", function()
    TopicParticipants:increment(-1, 1)
    TopicParticipants:decrement(-1, 1)
    local ps = TopicParticipants:select()
    return assert.same(0, #ps)
  end)
  return it("should un-participate an unincluded user", function()
    TopicParticipants:decrement(-1, 1)
    local ps = TopicParticipants:select()
    return assert.same(0, #ps)
  end)
end)
